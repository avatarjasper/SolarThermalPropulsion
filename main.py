import numpy as np
from receiver import Cone
from collector import Collector
from nozzle import Nozzle

#RECEIVER
CONE_RADIUS = 0.05 # m
CONE_LENGTH = 0.075 # m
CONE_THICKNESS = 0.002 # m
GRAPHITE_DENSITY = 2250 # kg/m^3
GRAPIHITE_C_P = 707.7 # J/kgK
GRAPHITE_THERMAL_CONDUCTIVITY = 24.0 # W/mK
T_MAX_GRAPHITE = 3500 # K
MDOT_INIT = 5.141931363082546e-05 # kg/s
STORAGE_TEMP = 400 # K

#NOZZLE
DELTA_V = 200 # m/s (at least)
SC_MASS_MAX = 24 # kg
GAMMA = 1.33
RA = 8.31446261815324
M = 18.01528e-3
TIME_BURN = 8*3600
AT = 8e-6
AE = 160e-6





cone = Cone(CONE_RADIUS, CONE_LENGTH, CONE_THICKNESS, GRAPHITE_DENSITY, GRAPIHITE_C_P, GRAPHITE_THERMAL_CONDUCTIVITY, T_MAX_GRAPHITE, MDOT_INIT, STORAGE_TEMP)

nozzle = Nozzle(DELTA_V, SC_MASS_MAX, GAMMA, RA, M, TIME_BURN, AT, AE, cone.Tc)


MDOT = 0
delta = 0.00000001
while abs(MDOT - nozzle.m_dot) > delta:
    MDOT = nozzle.m_dot
    cone = Cone(CONE_RADIUS, CONE_LENGTH, CONE_THICKNESS, GRAPHITE_DENSITY, GRAPIHITE_C_P, GRAPHITE_THERMAL_CONDUCTIVITY, T_MAX_GRAPHITE, MDOT, STORAGE_TEMP)
    nozzle = Nozzle(DELTA_V, SC_MASS_MAX, GAMMA, RA, M, TIME_BURN, AT, AE, cone.Tc)

print(f'{cone.Tc=}')
print(f'{cone.mass=}')
print(f'{nozzle.m_dot=}')


TRANSMISSION_EFFICIENCY = 0.8
COLLECTOR_NUMBER = 5
TRANSMISSION_DIAMETER = 760e-6 # m
SOLAR_FLUX = 1361 # W/m^2

collector = Collector(cone.power_to_prop, TRANSMISSION_EFFICIENCY, COLLECTOR_NUMBER, TRANSMISSION_DIAMETER, SOLAR_FLUX)

